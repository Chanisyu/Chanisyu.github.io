<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-07-09T15:50:09+08:00</updated><id>http://localhost:4000/</id><title type="html">sunseekers</title><subtitle>Record ideas and knowledge</subtitle><author><name>sunseekers</name></author><entry><title type="html">前端技术文章推荐</title><link href="http://localhost:4000/2019/07/09/web-recommend/" rel="alternate" type="text/html" title="前端技术文章推荐" /><published>2019-07-09T00:00:00+08:00</published><updated>2019-07-09T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/09/web%20recommend</id><content type="html" xml:base="http://localhost:4000/2019/07/09/web-recommend/">&lt;h1 id=&quot;推荐原因&quot;&gt;推荐原因&lt;/h1&gt;
&lt;p&gt;大佬的文章是真的写的好好，仰望的对象。推荐css，html，JavaScript的基础原理文章。
牢固夯实自己的基础。&lt;/p&gt;

&lt;h2 id=&quot;推荐文章&quot;&gt;推荐文章&lt;/h2&gt;

&lt;h3 id=&quot;positionsticky-怎么使用&quot;&gt;position:sticky 怎么使用？&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zhangxinxu.com/wordpress/2018/12/css-position-sticky/&quot;&gt;杀了个回马枪，还是说说position:sticky吧&lt;/a&gt;&lt;/p&gt;</content><author><name>sunseekers</name></author><summary type="html">推荐原因 大佬的文章是真的写的好好，仰望的对象。推荐css，html，JavaScript的基础原理文章。 牢固夯实自己的基础。</summary></entry><entry><title type="html">前端项目的搭建</title><link href="http://localhost:4000/2019/07/08/vue-cli/" rel="alternate" type="text/html" title="前端项目的搭建" /><published>2019-07-08T00:00:00+08:00</published><updated>2019-07-08T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/08/vue%20cli</id><content type="html" xml:base="http://localhost:4000/2019/07/08/vue-cli/">&lt;h1 id=&quot;vue-搭建项目&quot;&gt;vue 搭建项目&lt;/h1&gt;
&lt;p&gt;一直都是从事用 &lt;code class=&quot;highlighter-rouge&quot;&gt;vue&lt;/code&gt; 进行工作开发，参与过大小项目的开发，自己参与过。虽然项目 &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; 之后都是一堆看不懂的文件，
但是对于开发而言，关系可大了，会影响开发&lt;/p&gt;

&lt;h2 id=&quot;接触过的项目目录结构&quot;&gt;接触过的项目目录结构&lt;/h2&gt;</content><author><name>sunseekers</name></author><summary type="html">vue 搭建项目 一直都是从事用 vue 进行工作开发，参与过大小项目的开发，自己参与过。虽然项目 build 之后都是一堆看不懂的文件， 但是对于开发而言，关系可大了，会影响开发</summary></entry><entry><title type="html">JavaScript 知识点概念</title><link href="http://localhost:4000/2019/07/08/javascript/" rel="alternate" type="text/html" title="JavaScript 知识点概念" /><published>2019-07-08T00:00:00+08:00</published><updated>2019-07-08T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/08/javascript</id><content type="html" xml:base="http://localhost:4000/2019/07/08/javascript/">&lt;h1 id=&quot;javascript-中一些名词或者概念的解释&quot;&gt;JavaScript 中一些名词或者概念的解释&lt;/h1&gt;
&lt;p&gt;有些词语知道是什么意思，但是只停留在表面的，并未深入了解或者扩展之后就不知道怎么用了。大部分是自己的理解，或许有不对不全理解不深入的地方。&lt;/p&gt;

&lt;h2 id=&quot;伪数组是怎么定义的&quot;&gt;伪数组是怎么定义的&lt;/h2&gt;
&lt;p&gt;含有 length 属性的 json 对象，它并不具有数组的一些方法，只能能通过Array.prototype.slice转换为真正的数组&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;例如： var obj = {0:'a',1:'b',name:'sunskkers',length:8}; // 伪数组,有length属性，可以用Array.from()转化为一个长度是8的数组

var obj1 = {0:'a',1:'b',name:'sunskkers'}; //伪数组,对象的原型上有length属性，可以用Array.from()转化为一个空数组
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/96&quot;&gt;第 55 题：某公司 1 到 12 月份的销售额存在一个对象里面，如下：{1:222, 2:123, 5:888}，请把数据处理为如下结构：[222, 123, null, null, 888, null, null, null, null, null, null, null]&lt;/a&gt;
里面不理解为啥要给对象加一个 length 属性，原来是为了转化为一个长度为12的数组&lt;/p&gt;

&lt;p&gt;疑问： &lt;code class=&quot;highlighter-rouge&quot;&gt;Array.from({length:12})&lt;/code&gt; 为啥有人喜欢这样创建一个数组？是有什么优化还是？&lt;/p&gt;

&lt;h2 id=&quot;运算符的优先级&quot;&gt;运算符的优先级&lt;/h2&gt;
&lt;p&gt;. 的优先级高于 = ；单独的这样一句话，想必大部分人都知道吧，但是放到代码场景中我就不知道了。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var a = {n: 1};
var b = a;
a.x = a = {n: 2};

console.log(a.x) 	
console.log(b.x)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;之前看到过这样的问题，绕了半天，勉强理解了，一段时间之后就忘了。直到看到有朋友解释：”.的优先级比=要高，所以这里首先执行a.x，相当于为a（或者b）所指向的{n:1}对象新增了一个属性x，即此时对象将变为{n:1;x:undefined}。之后按正常情况，从右到左进行赋值，此时执行a ={n:2}的时候，a的引用改变，指向了新对象{n：2},而b依然指向的是旧对象”。
我才恍然大悟。原来我的问题在我忽略了 &lt;em&gt;. 的优先级高于 =&lt;/em&gt;，然后才一直不理解
&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/93&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;</content><author><name>sunseekers</name></author><summary type="html">JavaScript 中一些名词或者概念的解释 有些词语知道是什么意思，但是只停留在表面的，并未深入了解或者扩展之后就不知道怎么用了。大部分是自己的理解，或许有不对不全理解不深入的地方。</summary></entry><entry><title type="html">算不算算法的算法</title><link href="http://localhost:4000/2019/07/08/algorithm001/" rel="alternate" type="text/html" title="算不算算法的算法" /><published>2019-07-08T00:00:00+08:00</published><updated>2019-07-08T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/08/algorithm001</id><content type="html" xml:base="http://localhost:4000/2019/07/08/algorithm001/">&lt;h1 id=&quot;是算法还是不是&quot;&gt;是算法还是不是？&lt;/h1&gt;
&lt;p&gt;非科班出身，非计算机出生的我，对于算法数据结构计算机原理等等相关的知识一脸茫然。但是耳边总是会听到有人说算法或者相关方面的知识，
我就断断续续的把我听到的记录下来吧，是还是不是？交给时间，时间会给我答案&lt;/p&gt;

&lt;h2 id=&quot;计算1-100之间偶数的和&quot;&gt;计算1-100之间偶数的和？&lt;/h2&gt;
&lt;p&gt;这样的题目我们逼着眼睛都知道要怎么写，好像在很多关于数据结构和算法里面都看到这个经典的案例。或许在我们日常的编程过程中并没有什么实质性的用，
或许有时候会觉得多此一举&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let sum = 0
写法一
for (let i=1; i&amp;lt;=100; i++){   // 这里我们要循环计算100次
    if (i%2==0) {
        sum+=i
    }
 }
 
写法二
for (let i=0; i&amp;lt;=100; i+=2){   // 这里我们要循环计算50次
    if (i%2==0) {
        sum+=i
    }
 }
   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;思考：是不是有更好的解决方法呢？比如高中学过的等差数列求和，或者小学初中学过的某个东西？&lt;/p&gt;

&lt;p&gt;即便是计算机替我们计算，但是执行次数越少的方法，达到某一个数量级应该是要快很多的&lt;/p&gt;

&lt;h2 id=&quot;百钱百鸡&quot;&gt;百钱百鸡？&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let chicken = 0
let count = 0
写法一
for (let cock = 0;cock&amp;lt;=20;cock++){
    for(let hen = 0; hen&amp;lt;=33;hen++{
    count++
    chicken=100-cock-hen
    if((cock*5+hen*3+chilcken/3==100) &amp;amp;&amp;amp; chicken%3==0){//这里有性能优化，具体解释忘记了
        console.log('母鸡 '+ hen,'公鸡 '+ cock,'小鸡 '+ chilcken,)
     }
   }
}

写法二
for (let cock = 0;cock&amp;lt;=20;cock++){
    for(let hen = 0; hen&amp;lt;=33;hen++{
    count++
    if((cock+hen+chilcken==100) &amp;amp;&amp;amp; (cock*5+hen*3+chilcken/3==100)){
        console.log('母鸡 '+ hen,'公鸡 '+ cock,'小鸡 '+ chilcken,)
     }
   }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>sunseekers</name></author><summary type="html">是算法还是不是？ 非科班出身，非计算机出生的我，对于算法数据结构计算机原理等等相关的知识一脸茫然。但是耳边总是会听到有人说算法或者相关方面的知识， 我就断断续续的把我听到的记录下来吧，是还是不是？交给时间，时间会给我答案</summary></entry><entry><title type="html">解决工作bug或者需求系列文章</title><link href="http://localhost:4000/2019/07/05/work/" rel="alternate" type="text/html" title="解决工作bug或者需求系列文章" /><published>2019-07-05T00:00:00+08:00</published><updated>2019-07-05T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/05/work</id><content type="html" xml:base="http://localhost:4000/2019/07/05/work/">&lt;h1 id=&quot;好文章专治千奇百怪的-bug&quot;&gt;好文章，专治千奇百怪的 &lt;code class=&quot;highlighter-rouge&quot;&gt;bug&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;测试提 &lt;code class=&quot;highlighter-rouge&quot;&gt;bug&lt;/code&gt; ，产品提需求。如果我没法解决，头昏脑胀，揪完整头的头发都没有用，时刻要面临失业的风险。
所以碰到已经解决的问题，碰到揪了好多头发的问题，一定要留一点痕迹&lt;/p&gt;

&lt;h2 id=&quot;遇到的问题&quot;&gt;遇到的问题&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;问题：ios 监听事件没法唤起软键盘，&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;解决关键: 用户触发，要不是直接点击文本输入元素，要不就是间接点击。参考文章
&lt;a href=&quot;http://www.iamaddy.net/2016/11/mobile-keyboard-javascript/&quot;&gt;移动端JavaScript拉起软键盘&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;问题：监听 &lt;code class=&quot;highlighter-rouge&quot;&gt;scrollTop&lt;/code&gt; 失效，不能预期的自动滚动到浏览器底部或者顶部&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;解决方案&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollIntoView&quot;&gt;参考文档&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;问题：创建和编辑页面用到同一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;component&lt;/code&gt; 组件的时候，默认组件不会在触发 &lt;code class=&quot;highlighter-rouge&quot;&gt;vue&lt;/code&gt; 里面的 &lt;code class=&quot;highlighter-rouge&quot;&gt;create&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;mounted&lt;/code&gt; 钩子函数？(因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;vue&lt;/code&gt; 默认是高度复用)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;解决方案一 ： 可以在 &lt;code class=&quot;highlighter-rouge&quot;&gt;router-view&lt;/code&gt; 组件上面加一个唯一的 &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; 来处理，保证唯一的 &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; ,路由切换的时候就会重新触发渲染钩子&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;router-view :key=&quot;key&quot;&amp;gt;&amp;lt;/router-view&amp;gt;

computed: {
  key() {
    // 只要保证 key 唯一性就可以了，保证不同页面的 key 不相同
    return this.$route.fullPath
  }
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;解决方法二：在当前页面使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;watch&lt;/code&gt; 监听路由是否发生变化&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;watch:{
  '$route'(newVal,oldVal){ //路由发生了编辑
    if (newVal.path == &quot;/systemSetting/appdetails&quot;) {
    //进行数据的初始化
  }
}
},
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;解决方法三：使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;v-if&lt;/code&gt; 强制所有组件重新渲染，可以使用 &lt;a href=&quot;https://cn.vuejs.org/v2/guide/components-edge-cases.html#%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;provide&lt;/code&gt;&lt;/a&gt; 进行依赖注册&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;router-view v-if=&quot;isRouterAlive&quot;&amp;gt;&amp;lt;/router-view&amp;gt;

  methods: {
    reload () {
      this.isRouterAlive = false
      this.$nextTick(() =&amp;gt; {
        this.isRouterAlive = true
      })
    },
   }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;解决方案都是根据路由的变化，对组件进行重新渲染或者初始化&lt;/p&gt;</content><author><name>sunseekers</name></author><summary type="html">好文章，专治千奇百怪的 bug 测试提 bug ，产品提需求。如果我没法解决，头昏脑胀，揪完整头的头发都没有用，时刻要面临失业的风险。 所以碰到已经解决的问题，碰到揪了好多头发的问题，一定要留一点痕迹</summary></entry><entry><title type="html">JavaScript 库 + UI插件推荐 + 周边技术</title><link href="http://localhost:4000/2019/07/05/web/" rel="alternate" type="text/html" title="JavaScript 库 + UI插件推荐 + 周边技术" /><published>2019-07-05T00:00:00+08:00</published><updated>2019-07-05T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/05/web</id><content type="html" xml:base="http://localhost:4000/2019/07/05/web/">&lt;h1 id=&quot;日常工作用的-js-库ui-插件&quot;&gt;日常工作用的 &lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt; 库，&lt;code class=&quot;highlighter-rouge&quot;&gt;UI&lt;/code&gt; 插件&lt;/h1&gt;
&lt;p&gt;痛点是：只有7秒钟的记忆，知道很多好用的库或者 &lt;code class=&quot;highlighter-rouge&quot;&gt;UI&lt;/code&gt; ，但是每一次都说不出名字，都要各种查找，呼唤记忆。
大量时间被浪费，这篇文章用做记录，方便我下次快速查找到，会陆续更新，有问题或者有好的推荐的朋友可以提pr，或者私聊我，我加上去。
相信我个人的力量是有限的，我所列出基本都是公司项目中用过，或者朋友推荐。入职前端到目前一直使用的都是 &lt;code class=&quot;highlighter-rouge&quot;&gt;vue&lt;/code&gt; ，所推荐有关 &lt;code class=&quot;highlighter-rouge&quot;&gt;UI&lt;/code&gt; ，基本默认是  &lt;code class=&quot;highlighter-rouge&quot;&gt;vue&lt;/code&gt;，
在我的熟悉范围推荐。排名不分前后，瞎排，有可能不分文案写错了，欢迎指正
部分内容具有时效性，所有内容仅供参考，如有侵权联系我进行删除&lt;/p&gt;

&lt;h2 id=&quot;javascript-库插件&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;javaScript&lt;/code&gt; 库，插件&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://antv.alipay.com/zh-cn/index.html&quot;&gt;Antv&lt;/a&gt;   : 蚂蚁金服出品的一系列数据可视化解决方案&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://echarts.baidu.com/index.html&quot;&gt;echarts&lt;/a&gt;   : 百度出品的一系列数据可视化解决方案，在公司项目中用过&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://threejs.org/&quot;&gt;three.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/js-cookie/js-cookie&quot;&gt;js-cookie&lt;/a&gt;   : 设置cookie的一个轻量级库，在公司项目中用过&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zh.nuxtjs.org/guide/&quot;&gt;Nuxt.js&lt;/a&gt;: 在公司项目中用过，主要是做 &lt;code class=&quot;highlighter-rouge&quot;&gt;SEO&lt;/code&gt; 优化&lt;/p&gt;

&lt;h2 id=&quot;ui-文档pc端&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UI&lt;/code&gt; 文档（PC端）&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://vue.ant.design/docs/vue/introduce/&quot;&gt;Ant Vue&lt;/a&gt;   : 在公司项目中用过&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.iviewui.com/docs/guide/install&quot;&gt;iView&lt;/a&gt; : 在公司项目中用过&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://element.eleme.cn/2.8/#/zh-CN&quot;&gt;element&lt;/a&gt; :在公司项目中用过&lt;/p&gt;

&lt;p&gt;注：&lt;code class=&quot;highlighter-rouge&quot;&gt;UI&lt;/code&gt; 综合整体情况，及 &lt;code class=&quot;highlighter-rouge&quot;&gt;UI&lt;/code&gt; 背后的社区和维护者进行选择，没有好坏之分，适合的就是最好&lt;/p&gt;

&lt;h2 id=&quot;ui-文档移动端&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UI&lt;/code&gt; 文档（移动端）&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://youzan.github.io/vant/#/zh-CN/intro&quot;&gt;vant Vue&lt;/a&gt;   : 在公司项目中用过，有赞团队&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mint-ui.github.io/docs/#/zh-cn/&quot;&gt;element Mint UI&lt;/a&gt; : 在公司项目中用过，&lt;code class=&quot;highlighter-rouge&quot;&gt;element&lt;/code&gt; 团队，组件相对而言比较少&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://didi.github.io/cube-ui/#/zh-CN/&quot;&gt;cube UI&lt;/a&gt; :在公司项目中用过，滴滴团队维护&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://doc.vux.li/zh-CN/&quot;&gt;VUX&lt;/a&gt;: 在某篇博客看到过推荐&lt;/p&gt;

&lt;p&gt;注：&lt;code class=&quot;highlighter-rouge&quot;&gt;UI&lt;/code&gt; 综合整体情况，及 &lt;code class=&quot;highlighter-rouge&quot;&gt;UI&lt;/code&gt; 背后的社区和维护者进行选择，没有好坏之分，适合的就是最好&lt;/p&gt;

&lt;h2 id=&quot;前端周边辅助工具&quot;&gt;前端周边辅助工具&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.photopea.com/&quot;&gt;网页版ps&lt;/a&gt;: 这个可能需要翻墙，可能有广告&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ps.gaoding.com/?hmsr=ivan-intro-zhihu#/&quot;&gt;网页版ps&lt;/a&gt;:没有广告，自由访问&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tinypng.com/&quot;&gt;图片压缩网站&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.guerrillamail.com/inbox&quot;&gt;虚拟邮箱，用于注册测试&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://lanhuapp.com/&quot;&gt;蓝湖 设计稿&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.iconfont.cn/&quot;&gt;iconfont 阿里巴巴字体图标&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://font-spider.org/&quot;&gt;字蛛&lt;/a&gt;: 字体压缩&lt;/p&gt;

&lt;h3 id=&quot;思维导图工具网页版&quot;&gt;思维导图工具网页版&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.processon.com/&quot;&gt;ProcessOn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.draw.io/&quot;&gt;draw&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://naotu.baidu.com/&quot;&gt;百度脑图&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zhimap.com/&quot;&gt;zhiMap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zybuluo.com/cmd/&quot;&gt;作业部落&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;之前很多人问我用什么思维导图工具，现在做一个集合。我用的最多的是前面两款。第一个做思维导图，后面做流程图&lt;/p&gt;</content><author><name>sunseekers</name></author><summary type="html">日常工作用的 js 库，UI 插件 痛点是：只有7秒钟的记忆，知道很多好用的库或者 UI ，但是每一次都说不出名字，都要各种查找，呼唤记忆。 大量时间被浪费，这篇文章用做记录，方便我下次快速查找到，会陆续更新，有问题或者有好的推荐的朋友可以提pr，或者私聊我，我加上去。 相信我个人的力量是有限的，我所列出基本都是公司项目中用过，或者朋友推荐。入职前端到目前一直使用的都是 vue ，所推荐有关 UI ，基本默认是 vue， 在我的熟悉范围推荐。排名不分前后，瞎排，有可能不分文案写错了，欢迎指正 部分内容具有时效性，所有内容仅供参考，如有侵权联系我进行删除</summary></entry><entry><title type="html">前端面试系列文章</title><link href="http://localhost:4000/2019/07/05/interview/" rel="alternate" type="text/html" title="前端面试系列文章" /><published>2019-07-05T00:00:00+08:00</published><updated>2019-07-05T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/05/interview</id><content type="html" xml:base="http://localhost:4000/2019/07/05/interview/">&lt;h1 id=&quot;不定期盘点知识体系&quot;&gt;不定期盘点知识体系&lt;/h1&gt;
&lt;p&gt;换工作是一波人才的合理流动，面试是对自己知识体系的一次盘点。查漏补缺，追逐各种新技术，新框架。但同时不忘记对自己知识的巩固，
万丈高楼平地起，坚固的高楼大厦需要夯实基础&lt;/p&gt;

&lt;h2 id=&quot;系列参考文章&quot;&gt;系列参考文章&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.poetries.top/FE-Interview-Questions/base/#_2-%E8%AF%B4%E8%AF%B4%E4%BD%A0%E5%AF%B9%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E7%9A%84%E7%90%86%E8%A7%A3&quot;&gt;FE-Interview&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Advanced-Frontend/Daily-Interview-Question/blob/master/datum/summary.md&quot;&gt;每天搞定一道前端大厂面试题&lt;/a&gt;，都是有一定的挑战性，题目都很不错，推荐&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/59316e682f301e0058378558&quot;&gt;阿里、网易、滴滴共十次前端面试碰到的问题&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/5d23e750f265da1b855c7bbe&quot;&gt;前端 100 问：能搞懂80%的请把简历给我&lt;/a&gt;&lt;/p&gt;</content><author><name>sunseekers</name></author><summary type="html">不定期盘点知识体系 换工作是一波人才的合理流动，面试是对自己知识体系的一次盘点。查漏补缺，追逐各种新技术，新框架。但同时不忘记对自己知识的巩固， 万丈高楼平地起，坚固的高楼大厦需要夯实基础</summary></entry><entry><title type="html">前端规范</title><link href="http://localhost:4000/2019/07/05/css-standard/" rel="alternate" type="text/html" title="前端规范" /><published>2019-07-05T00:00:00+08:00</published><updated>2019-07-05T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/05/css%20standard</id><content type="html" xml:base="http://localhost:4000/2019/07/05/css-standard/">&lt;h1 id=&quot;团队规范高于一切规范&quot;&gt;团队规范高于一切规范&lt;/h1&gt;
&lt;p&gt;大部分团队规范都是在慢慢探索，实践规范起来的。适合团队的就是最好，否者都是纸上谈兵&lt;/p&gt;

&lt;h2 id=&quot;差点死在规范上&quot;&gt;差点死在规范上&lt;/h2&gt;
&lt;p&gt;我差点死在了规范上，是变量命名。之前写代码的时候并没有注意太多的，随心而写。如果有强迫症的人看着会难受，在我的代码里面样式命名有驼峰式和短横线分隔式。
你能看懂我代码写了什么，但是一个页面里面有几种写法，看着怪难受的。有因为赶项目，有因为中途接手项目，有因为一时手快的…我可以找到各种理由。所有的
理由都是因为我不注意规范，不找给自己理由了。&lt;/p&gt;

&lt;p&gt;这是我写的代码，现在回头看，想拍拍自己的脑袋，脑子里都想些啥呢&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/pages/001.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;修改前后对比，前面没有错，但是属性太长了，太多重复看上去不舒服&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/pages/002.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一会驼峰式，一会短横线式。写法都可以，没有对错，但是应该要遵循团队规范高于个人规范&lt;/p&gt;

&lt;h2 id=&quot;我平时写代码应该有的规范&quot;&gt;我平时写代码应该有的规范&lt;/h2&gt;

&lt;p&gt;每个常量都该命名，用有意义且常用的单词命名变量，长时间之后还知道这个常量是做什么的&lt;/p&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;forEach&lt;/code&gt; 或者其他循环的时候，参数命名要简单易懂，可描述性&lt;/p&gt;

&lt;p&gt;避免无意义的前缀命名，比如我前面写过的&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Bad:
const car = {
  carMake: 'Honda',
  carModel: 'Accord',
  carColor: 'Blue'
};

Good:
const car = {
  make: 'Honda',
  model: 'Accord',
  color: 'Blue'
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;函数参数越少越好，参数多了可以考虑使用结构，不用考虑参数顺序&lt;/p&gt;

&lt;p&gt;一个函数只做一件事情&lt;/p&gt;

&lt;p&gt;函数名要一眼就看懂是做什么的&lt;/p&gt;

&lt;p&gt;有一些规范已经融入骨髓，不好拿出来写了，上面的是我需要进一步改进的规范&lt;/p&gt;

&lt;p&gt;可参考&lt;a href=&quot;https://juejin.im/post/5b6ad6b0e51d4519171766e2&quot;&gt;[前端开发]–分享个人习惯的命名方式&lt;/a&gt; 我觉得他写的很好，可以借鉴和学习。推荐学习和收藏&lt;/p&gt;</content><author><name>sunseekers</name></author><summary type="html">团队规范高于一切规范 大部分团队规范都是在慢慢探索，实践规范起来的。适合团队的就是最好，否者都是纸上谈兵</summary></entry><entry><title type="html">vue 系列文章推荐</title><link href="http://localhost:4000/2019/07/04/vue-recommend/" rel="alternate" type="text/html" title="vue 系列文章推荐" /><published>2019-07-04T00:00:00+08:00</published><updated>2019-07-04T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/04/vue%20recommend</id><content type="html" xml:base="http://localhost:4000/2019/07/04/vue-recommend/">&lt;h1 id=&quot;发现探索-vue-优质文章&quot;&gt;发现，探索 &lt;code class=&quot;highlighter-rouge&quot;&gt;vue&lt;/code&gt; 优质文章&lt;/h1&gt;
&lt;p&gt;传送 我觉得写的好的 &lt;code class=&quot;highlighter-rouge&quot;&gt;vue&lt;/code&gt; 文章，曾经帮助我解决过问题的文章，推荐理由+链接，方便我下次快速查找。
部分内容具有时效性，所有内容仅供参考，如有侵权联系我进行删除&lt;/p&gt;

&lt;h2 id=&quot;来自-github&quot;&gt;来自 &lt;code class=&quot;highlighter-rouge&quot;&gt;github&lt;/code&gt;&lt;/h2&gt;

&lt;h2 id=&quot;来自掘金&quot;&gt;来自掘金&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/59097cd7a22b9d0065fb61d2?utm_medium=fe&amp;amp;utm_source=weixinqun&quot;&gt;手摸手，带你用vue撸后台 系列一（基础篇）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/5b0b7d74518825158e173a0c#heading-2&quot;&gt;网络传输性能优化&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;来自知乎&quot;&gt;来自知乎&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/71667382&quot;&gt;精读《Vue3.0 Function API》&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/53599723&quot;&gt;Vuex、Flux、Redux、Redux-saga、Dva、MobX&lt;/a&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;vue 3.0&lt;/code&gt; 提前篇 仅供参考 具有时效性&lt;/p&gt;

&lt;h2 id=&quot;来自博客&quot;&gt;来自博客&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://refined-x.com/2017/08/29/%E5%9F%BA%E4%BA%8EVue%E5%AE%9E%E7%8E%B0%E5%90%8E%E5%8F%B0%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/&quot;&gt;基于Vue实现后台系统权限控制&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;来自简书&quot;&gt;来自简书&lt;/h2&gt;

&lt;h2 id=&quot;来自网络&quot;&gt;来自网络&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.zhufengpeixun.cn/architecture/html/&quot;&gt;珠峰架构师成长计划&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.learnku.net/blog/articles/36&quot;&gt;Vuex之命名空间namespace用法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://vuex.vuejs.org/zh/guide/modules.html&quot;&gt;Vuex之命名空间namespace用法 文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://webpack.docschina.org/guides/dependency-management/&quot;&gt;webpack 带表达式的 require 语句  文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cn.vuejs.org/v2/cookbook/client-side-storage.html&quot;&gt;vue 客户端存储 文档&lt;/a&gt;&lt;/p&gt;</content><author><name>sunseekers</name></author><summary type="html">发现，探索 vue 优质文章 传送 我觉得写的好的 vue 文章，曾经帮助我解决过问题的文章，推荐理由+链接，方便我下次快速查找。 部分内容具有时效性，所有内容仅供参考，如有侵权联系我进行删除</summary></entry><entry><title type="html">vue 系列小实例</title><link href="http://localhost:4000/2019/07/04/vue-practice/" rel="alternate" type="text/html" title="vue 系列小实例" /><published>2019-07-04T00:00:00+08:00</published><updated>2019-07-04T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/04/vue%20practice</id><content type="html" xml:base="http://localhost:4000/2019/07/04/vue-practice/">&lt;h1 id=&quot;vue-动手系列&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vue&lt;/code&gt; 动手系列&lt;/h1&gt;
&lt;p&gt;搬运工，搬运可以动手尝试 &lt;code class=&quot;highlighter-rouge&quot;&gt;vue&lt;/code&gt; 系列小实例。部分内容具有时效性，所有内容仅供参考，如有侵权联系我进行删除&lt;/p&gt;

&lt;h2 id=&quot;来自-github&quot;&gt;来自 &lt;code class=&quot;highlighter-rouge&quot;&gt;github&lt;/code&gt;&lt;/h2&gt;

&lt;h2 id=&quot;来自掘金&quot;&gt;来自掘金&lt;/h2&gt;

&lt;h2 id=&quot;来自知乎&quot;&gt;来自知乎&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/59317112&quot;&gt;实现一个 Vue 吸顶锚点组件&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/66779396&quot;&gt;长列表渲染实践&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;来自博客&quot;&gt;来自博客&lt;/h2&gt;

&lt;h2 id=&quot;来自简书&quot;&gt;来自简书&lt;/h2&gt;

&lt;h2 id=&quot;来自网络&quot;&gt;来自网络&lt;/h2&gt;</content><author><name>sunseekers</name></author><summary type="html">vue 动手系列 搬运工，搬运可以动手尝试 vue 系列小实例。部分内容具有时效性，所有内容仅供参考，如有侵权联系我进行删除</summary></entry></feed>